{"version":3,"file":"devextreme-angular-ui-file-manager.mjs","sources":["../../../dist/ui/file-manager/index.ts","../../../dist/ui/file-manager/devextreme-angular-ui-file-manager.ts"],"sourcesContent":["/*!\n * devextreme-angular\n * Version: 24.1.3\n * Build date: Tue Jun 11 2024\n *\n * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:max-line-length */\r\n\r\n\r\nimport {\r\n    TransferState,\r\n    Component,\r\n    NgModule,\r\n    ElementRef,\r\n    NgZone,\r\n    PLATFORM_ID,\r\n    Inject,\r\n\r\n    Input,\r\n    Output,\r\n    OnDestroy,\r\n    EventEmitter,\r\n    OnChanges,\r\n    DoCheck,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n\r\nimport { SingleOrMultiple } from 'devextreme/common';\r\nimport { ContentReadyEvent, ContextMenuItemClickEvent, ContextMenuShowingEvent, CurrentDirectoryChangedEvent, DirectoryCreatedEvent, DirectoryCreatingEvent, DisposingEvent, dxFileManagerContextMenu, dxFileManagerDetailsColumn, dxFileManagerToolbar, ErrorOccurredEvent, FileManagerItemViewMode, FileUploadedEvent, FileUploadingEvent, FocusedItemChangedEvent, InitializedEvent, ItemCopiedEvent, ItemCopyingEvent, ItemDeletedEvent, ItemDeletingEvent, ItemDownloadingEvent, ItemMovedEvent, ItemMovingEvent, ItemRenamedEvent, ItemRenamingEvent, OptionChangedEvent, SelectedFileOpenedEvent, SelectionChangedEvent, ToolbarItemClickEvent } from 'devextreme/ui/file_manager';\r\n\r\nimport DxFileManager from 'devextreme/ui/file_manager';\r\n\r\n\r\nimport {\r\n    DxComponent,\r\n    DxTemplateHost,\r\n    DxIntegrationModule,\r\n    DxTemplateModule,\r\n    NestedOptionHost,\r\n    IterableDifferHelper,\r\n    WatcherHelper\r\n} from 'devextreme-angular/core';\r\n\r\nimport { DxoContextMenuModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiItemModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoItemViewModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoDetailsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiColumnModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoNotificationsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoPermissionsModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoToolbarModule } from 'devextreme-angular/ui/nested';\r\nimport { DxiFileSelectionItemModule } from 'devextreme-angular/ui/nested';\r\nimport { DxoUploadModule } from 'devextreme-angular/ui/nested';\r\n\r\n\r\n\r\n\r\n/**\r\n * The FileManager is a UI component that allows users to upload, select, and manage files and directories in different file storages.\r\n\r\n */\r\n@Component({\r\n    selector: 'dx-file-manager',\r\n    template: '',\r\n    providers: [\r\n        DxTemplateHost,\r\n        WatcherHelper,\r\n        NestedOptionHost,\r\n        IterableDifferHelper\r\n    ]\r\n})\r\nexport class DxFileManagerComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    instance: DxFileManager = null;\r\n\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    @Input()\r\n    get accessKey(): string | undefined {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value: string | undefined) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n    \r\n     */\r\n    @Input()\r\n    get activeStateEnabled(): boolean {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value: boolean) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the allowed upload file extensions.\r\n    \r\n     */\r\n    @Input()\r\n    get allowedFileExtensions(): Array<string> {\r\n        return this._getOption('allowedFileExtensions');\r\n    }\r\n    set allowedFileExtensions(value: Array<string>) {\r\n        this._setOption('allowedFileExtensions', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the context menu settings.\r\n    \r\n     */\r\n    @Input()\r\n    get contextMenu(): dxFileManagerContextMenu {\r\n        return this._getOption('contextMenu');\r\n    }\r\n    set contextMenu(value: dxFileManagerContextMenu) {\r\n        this._setOption('contextMenu', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the path that is used when the FileManager is initialized.\r\n    \r\n     */\r\n    @Input()\r\n    get currentPath(): string {\r\n        return this._getOption('currentPath');\r\n    }\r\n    set currentPath(value: string) {\r\n        this._setOption('currentPath', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies an array of path keys to the current location.\r\n    \r\n     */\r\n    @Input()\r\n    get currentPathKeys(): Array<string> {\r\n        return this._getOption('currentPathKeys');\r\n    }\r\n    set currentPathKeys(value: Array<string>) {\r\n        this._setOption('currentPathKeys', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Customizes columns in details view. Applies only if itemView.mode is &apos;details&apos;.\r\n    \r\n     */\r\n    @Input()\r\n    get customizeDetailColumns(): Function {\r\n        return this._getOption('customizeDetailColumns');\r\n    }\r\n    set customizeDetailColumns(value: Function) {\r\n        this._setOption('customizeDetailColumns', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Allows you to provide custom icons to be used as thumbnails.\r\n    \r\n     */\r\n    @Input()\r\n    get customizeThumbnail(): Function {\r\n        return this._getOption('customizeThumbnail');\r\n    }\r\n    set customizeThumbnail(value: Function) {\r\n        this._setOption('customizeThumbnail', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    @Input()\r\n    get disabled(): boolean {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value: boolean) {\r\n        this._setOption('disabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    @Input()\r\n    get elementAttr(): any {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value: any) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the file system provider.\r\n    \r\n     */\r\n    @Input()\r\n    get fileSystemProvider(): any {\r\n        return this._getOption('fileSystemProvider');\r\n    }\r\n    set fileSystemProvider(value: any) {\r\n        this._setOption('fileSystemProvider', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies a key of the initially or currently focused item.\r\n    \r\n     */\r\n    @Input()\r\n    get focusedItemKey(): string {\r\n        return this._getOption('focusedItemKey');\r\n    }\r\n    set focusedItemKey(value: string) {\r\n        this._setOption('focusedItemKey', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    @Input()\r\n    get focusStateEnabled(): boolean {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value: boolean) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    @Input()\r\n    get height(): number | Function | string | undefined {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value: number | Function | string | undefined) {\r\n        this._setOption('height', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    @Input()\r\n    get hint(): string | undefined {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value: string | undefined) {\r\n        this._setOption('hint', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    @Input()\r\n    get hoverStateEnabled(): boolean {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value: boolean) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures the file and directory view.\r\n    \r\n     */\r\n    @Input()\r\n    get itemView(): { details?: { columns?: Array<dxFileManagerDetailsColumn | string> }, mode?: FileManagerItemViewMode, showFolders?: boolean, showParentFolder?: boolean } {\r\n        return this._getOption('itemView');\r\n    }\r\n    set itemView(value: { details?: { columns?: Array<dxFileManagerDetailsColumn | string> }, mode?: FileManagerItemViewMode, showFolders?: boolean, showParentFolder?: boolean }) {\r\n        this._setOption('itemView', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures notification settings.\r\n    \r\n     */\r\n    @Input()\r\n    get notifications(): { showPanel?: boolean, showPopup?: boolean } {\r\n        return this._getOption('notifications');\r\n    }\r\n    set notifications(value: { showPanel?: boolean, showPopup?: boolean }) {\r\n        this._setOption('notifications', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies actions that a user is allowed to perform on files and directories.\r\n    \r\n     */\r\n    @Input()\r\n    get permissions(): { copy?: boolean, create?: boolean, delete?: boolean, download?: boolean, move?: boolean, rename?: boolean, upload?: boolean } {\r\n        return this._getOption('permissions');\r\n    }\r\n    set permissions(value: { copy?: boolean, create?: boolean, delete?: boolean, download?: boolean, move?: boolean, rename?: boolean, upload?: boolean }) {\r\n        this._setOption('permissions', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the root directory display name.\r\n    \r\n     */\r\n    @Input()\r\n    get rootFolderName(): string {\r\n        return this._getOption('rootFolderName');\r\n    }\r\n    set rootFolderName(value: string) {\r\n        this._setOption('rootFolderName', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    @Input()\r\n    get rtlEnabled(): boolean {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value: boolean) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Contains an array of initially or currently selected files and directories&apos; keys.\r\n    \r\n     */\r\n    @Input()\r\n    get selectedItemKeys(): Array<string> {\r\n        return this._getOption('selectedItemKeys');\r\n    }\r\n    set selectedItemKeys(value: Array<string>) {\r\n        this._setOption('selectedItemKeys', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether a user can select a single or multiple files and directories in the item view simultaneously.\r\n    \r\n     */\r\n    @Input()\r\n    get selectionMode(): SingleOrMultiple {\r\n        return this._getOption('selectionMode');\r\n    }\r\n    set selectionMode(value: SingleOrMultiple) {\r\n        this._setOption('selectionMode', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    @Input()\r\n    get tabIndex(): number {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value: number) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures toolbar settings.\r\n    \r\n     */\r\n    @Input()\r\n    get toolbar(): dxFileManagerToolbar {\r\n        return this._getOption('toolbar');\r\n    }\r\n    set toolbar(value: dxFileManagerToolbar) {\r\n        this._setOption('toolbar', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Configures upload settings.\r\n    \r\n     */\r\n    @Input()\r\n    get upload(): { chunkSize?: number, maxFileSize?: number } {\r\n        return this._getOption('upload');\r\n    }\r\n    set upload(value: { chunkSize?: number, maxFileSize?: number }) {\r\n        this._setOption('upload', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    @Input()\r\n    get visible(): boolean {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: boolean) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    @Input()\r\n    get width(): number | Function | string | undefined {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value: number | Function | string | undefined) {\r\n        this._setOption('width', value);\r\n    }\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the UI component is rendered and each time the component is repainted.\r\n    \r\n    \r\n     */\r\n    @Output() onContentReady: EventEmitter<ContentReadyEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a context menu item is clicked.\r\n    \r\n    \r\n     */\r\n    @Output() onContextMenuItemClick: EventEmitter<ContextMenuItemClickEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a context menu is displayed.\r\n    \r\n    \r\n     */\r\n    @Output() onContextMenuShowing: EventEmitter<ContextMenuShowingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the current directory is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onCurrentDirectoryChanged: EventEmitter<CurrentDirectoryChangedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a directory is created.\r\n    \r\n    \r\n     */\r\n    @Output() onDirectoryCreated: EventEmitter<DirectoryCreatedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a directory is created.\r\n    \r\n    \r\n     */\r\n    @Output() onDirectoryCreating: EventEmitter<DirectoryCreatingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the UI component is disposed of.\r\n    \r\n    \r\n     */\r\n    @Output() onDisposing: EventEmitter<DisposingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when an error occurs.\r\n    \r\n    \r\n     */\r\n    @Output() onErrorOccurred: EventEmitter<ErrorOccurredEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a file is successfully uploaded.\r\n    \r\n    \r\n     */\r\n    @Output() onFileUploaded: EventEmitter<FileUploadedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before the file is uploaded.\r\n    \r\n    \r\n     */\r\n    @Output() onFileUploading: EventEmitter<FileUploadingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the focused item is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onFocusedItemChanged: EventEmitter<FocusedItemChangedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function used in JavaScript frameworks to save the UI component instance.\r\n    \r\n    \r\n     */\r\n    @Output() onInitialized: EventEmitter<InitializedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a file or directory is copied.\r\n    \r\n    \r\n     */\r\n    @Output() onItemCopied: EventEmitter<ItemCopiedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file or directory is copied.\r\n    \r\n    \r\n     */\r\n    @Output() onItemCopying: EventEmitter<ItemCopyingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a file or directory is deleted.\r\n    \r\n    \r\n     */\r\n    @Output() onItemDeleted: EventEmitter<ItemDeletedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file or directory is deleted.\r\n    \r\n    \r\n     */\r\n    @Output() onItemDeleting: EventEmitter<ItemDeletingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file is downloaded.\r\n    \r\n    \r\n     */\r\n    @Output() onItemDownloading: EventEmitter<ItemDownloadingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a file or directory is moved.\r\n    \r\n    \r\n     */\r\n    @Output() onItemMoved: EventEmitter<ItemMovedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file or directory is moved.\r\n    \r\n    \r\n     */\r\n    @Output() onItemMoving: EventEmitter<ItemMovingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a file or directory is renamed.\r\n    \r\n    \r\n     */\r\n    @Output() onItemRenamed: EventEmitter<ItemRenamedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed before a file or directory is renamed.\r\n    \r\n    \r\n     */\r\n    @Output() onItemRenaming: EventEmitter<ItemRenamingEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed after a UI component property is changed.\r\n    \r\n    \r\n     */\r\n    @Output() onOptionChanged: EventEmitter<OptionChangedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when the selected file is opened.\r\n    \r\n    \r\n     */\r\n    @Output() onSelectedFileOpened: EventEmitter<SelectedFileOpenedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a file system item is selected or selection is canceled.\r\n    \r\n    \r\n     */\r\n    @Output() onSelectionChanged: EventEmitter<SelectionChangedEvent>;\r\n\r\n    /**\r\n    \r\n     * A function that is executed when a toolbar item is clicked.\r\n    \r\n    \r\n     */\r\n    @Output() onToolbarItemClick: EventEmitter<ToolbarItemClickEvent>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() accessKeyChange: EventEmitter<string | undefined>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() activeStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() allowedFileExtensionsChange: EventEmitter<Array<string>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() contextMenuChange: EventEmitter<dxFileManagerContextMenu>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() currentPathChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() currentPathKeysChange: EventEmitter<Array<string>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() customizeDetailColumnsChange: EventEmitter<Function>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() customizeThumbnailChange: EventEmitter<Function>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() disabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() elementAttrChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() fileSystemProviderChange: EventEmitter<any>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() focusedItemKeyChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() focusStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() heightChange: EventEmitter<number | Function | string | undefined>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hintChange: EventEmitter<string | undefined>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() hoverStateEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() itemViewChange: EventEmitter<{ details?: { columns?: Array<dxFileManagerDetailsColumn | string> }, mode?: FileManagerItemViewMode, showFolders?: boolean, showParentFolder?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() notificationsChange: EventEmitter<{ showPanel?: boolean, showPopup?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() permissionsChange: EventEmitter<{ copy?: boolean, create?: boolean, delete?: boolean, download?: boolean, move?: boolean, rename?: boolean, upload?: boolean }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rootFolderNameChange: EventEmitter<string>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() rtlEnabledChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectedItemKeysChange: EventEmitter<Array<string>>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() selectionModeChange: EventEmitter<SingleOrMultiple>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() tabIndexChange: EventEmitter<number>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() toolbarChange: EventEmitter<dxFileManagerToolbar>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() uploadChange: EventEmitter<{ chunkSize?: number, maxFileSize?: number }>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() visibleChange: EventEmitter<boolean>;\r\n\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    @Output() widthChange: EventEmitter<number | Function | string | undefined>;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost,\r\n            private _watcherHelper: WatcherHelper,\r\n            private _idh: IterableDifferHelper,\r\n            optionHost: NestedOptionHost,\r\n            transferState: TransferState,\r\n            @Inject(PLATFORM_ID) platformId: any) {\r\n\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'contextMenuItemClick', emit: 'onContextMenuItemClick' },\r\n            { subscribe: 'contextMenuShowing', emit: 'onContextMenuShowing' },\r\n            { subscribe: 'currentDirectoryChanged', emit: 'onCurrentDirectoryChanged' },\r\n            { subscribe: 'directoryCreated', emit: 'onDirectoryCreated' },\r\n            { subscribe: 'directoryCreating', emit: 'onDirectoryCreating' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'errorOccurred', emit: 'onErrorOccurred' },\r\n            { subscribe: 'fileUploaded', emit: 'onFileUploaded' },\r\n            { subscribe: 'fileUploading', emit: 'onFileUploading' },\r\n            { subscribe: 'focusedItemChanged', emit: 'onFocusedItemChanged' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'itemCopied', emit: 'onItemCopied' },\r\n            { subscribe: 'itemCopying', emit: 'onItemCopying' },\r\n            { subscribe: 'itemDeleted', emit: 'onItemDeleted' },\r\n            { subscribe: 'itemDeleting', emit: 'onItemDeleting' },\r\n            { subscribe: 'itemDownloading', emit: 'onItemDownloading' },\r\n            { subscribe: 'itemMoved', emit: 'onItemMoved' },\r\n            { subscribe: 'itemMoving', emit: 'onItemMoving' },\r\n            { subscribe: 'itemRenamed', emit: 'onItemRenamed' },\r\n            { subscribe: 'itemRenaming', emit: 'onItemRenaming' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'selectedFileOpened', emit: 'onSelectedFileOpened' },\r\n            { subscribe: 'selectionChanged', emit: 'onSelectionChanged' },\r\n            { subscribe: 'toolbarItemClick', emit: 'onToolbarItemClick' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'allowedFileExtensionsChange' },\r\n            { emit: 'contextMenuChange' },\r\n            { emit: 'currentPathChange' },\r\n            { emit: 'currentPathKeysChange' },\r\n            { emit: 'customizeDetailColumnsChange' },\r\n            { emit: 'customizeThumbnailChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'fileSystemProviderChange' },\r\n            { emit: 'focusedItemKeyChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemViewChange' },\r\n            { emit: 'notificationsChange' },\r\n            { emit: 'permissionsChange' },\r\n            { emit: 'rootFolderNameChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'selectedItemKeysChange' },\r\n            { emit: 'selectionModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'toolbarChange' },\r\n            { emit: 'uploadChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n\r\n    protected _createInstance(element, options) {\r\n\r\n        return new DxFileManager(element, options);\r\n    }\r\n\r\n\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('allowedFileExtensions', changes);\r\n        this.setupChanges('currentPathKeys', changes);\r\n        this.setupChanges('selectedItemKeys', changes);\r\n    }\r\n\r\n    setupChanges(prop: string, changes: SimpleChanges) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        this._idh.doCheck('allowedFileExtensions');\r\n        this._idh.doCheck('currentPathKeys');\r\n        this._idh.doCheck('selectedItemKeys');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n\r\n    _setOption(name: string, value: any) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    DxoContextMenuModule,\r\n    DxiItemModule,\r\n    DxoItemViewModule,\r\n    DxoDetailsModule,\r\n    DxiColumnModule,\r\n    DxoNotificationsModule,\r\n    DxoPermissionsModule,\r\n    DxoToolbarModule,\r\n    DxiFileSelectionItemModule,\r\n    DxoUploadModule,\r\n    DxIntegrationModule,\r\n    DxTemplateModule\r\n  ],\r\n  declarations: [\r\n    DxFileManagerComponent\r\n  ],\r\n  exports: [\r\n    DxFileManagerComponent,\r\n    DxoContextMenuModule,\r\n    DxiItemModule,\r\n    DxoItemViewModule,\r\n    DxoDetailsModule,\r\n    DxiColumnModule,\r\n    DxoNotificationsModule,\r\n    DxoPermissionsModule,\r\n    DxoToolbarModule,\r\n    DxiFileSelectionItemModule,\r\n    DxoUploadModule,\r\n    DxTemplateModule\r\n  ]\r\n})\r\nexport class DxFileManagerModule { }\r\n\r\nimport type * as DxFileManagerTypes from \"devextreme/ui/file_manager_types\";\r\nexport { DxFileManagerTypes };\r\n\r\n\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}