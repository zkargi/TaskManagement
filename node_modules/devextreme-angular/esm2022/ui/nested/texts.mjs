/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoGanttHeaderFilterTexts } from './base/gantt-header-filter-texts';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoTextsComponent extends DxoGanttHeaderFilterTexts {
    get _optionPath() {
        return 'texts';
    }
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DxoTextsComponent, deps: [{ token: i1.NestedOptionHost, host: true, skipSelf: true }, { token: i1.NestedOptionHost, host: true }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: DxoTextsComponent, selector: "dxo-texts", inputs: { fix: "fix", leftPosition: "leftPosition", rightPosition: "rightPosition", unfix: "unfix", addRow: "addRow", cancelAllChanges: "cancelAllChanges", cancelRowChanges: "cancelRowChanges", confirmDeleteMessage: "confirmDeleteMessage", confirmDeleteTitle: "confirmDeleteTitle", deleteRow: "deleteRow", editRow: "editRow", saveAllChanges: "saveAllChanges", saveRowChanges: "saveRowChanges", undeleteRow: "undeleteRow", validationCancelChanges: "validationCancelChanges", exportAll: "exportAll", exportSelectedRows: "exportSelectedRows", exportTo: "exportTo", clearFilter: "clearFilter", createFilter: "createFilter", filterEnabledHint: "filterEnabledHint", groupByThisColumn: "groupByThisColumn", groupContinuedMessage: "groupContinuedMessage", groupContinuesMessage: "groupContinuesMessage", ungroup: "ungroup", ungroupAll: "ungroupAll", cancel: "cancel", emptyValue: "emptyValue", ok: "ok", avg: "avg", avgOtherColumn: "avgOtherColumn", count: "count", max: "max", maxOtherColumn: "maxOtherColumn", min: "min", minOtherColumn: "minOtherColumn", sum: "sum", sumOtherColumn: "sumOtherColumn", allFields: "allFields", columnFields: "columnFields", dataFields: "dataFields", filterFields: "filterFields", rowFields: "rowFields", columnFieldArea: "columnFieldArea", dataFieldArea: "dataFieldArea", filterFieldArea: "filterFieldArea", rowFieldArea: "rowFieldArea", collapseAll: "collapseAll", dataNotAvailable: "dataNotAvailable", expandAll: "expandAll", exportToExcel: "exportToExcel", grandTotal: "grandTotal", noData: "noData", removeAllSorting: "removeAllSorting", showFieldChooser: "showFieldChooser", sortColumnBySummary: "sortColumnBySummary", sortRowBySummary: "sortRowBySummary", total: "total", addRowToNode: "addRowToNode" }, providers: [NestedOptionHost], usesInheritance: true, ngImport: i0, template: '', isInline: true, styles: [""] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DxoTextsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dxo-texts', template: '', providers: [NestedOptionHost], inputs: [
                        'fix',
                        'leftPosition',
                        'rightPosition',
                        'unfix',
                        'addRow',
                        'cancelAllChanges',
                        'cancelRowChanges',
                        'confirmDeleteMessage',
                        'confirmDeleteTitle',
                        'deleteRow',
                        'editRow',
                        'saveAllChanges',
                        'saveRowChanges',
                        'undeleteRow',
                        'validationCancelChanges',
                        'exportAll',
                        'exportSelectedRows',
                        'exportTo',
                        'clearFilter',
                        'createFilter',
                        'filterEnabledHint',
                        'groupByThisColumn',
                        'groupContinuedMessage',
                        'groupContinuesMessage',
                        'ungroup',
                        'ungroupAll',
                        'cancel',
                        'emptyValue',
                        'ok',
                        'avg',
                        'avgOtherColumn',
                        'count',
                        'max',
                        'maxOtherColumn',
                        'min',
                        'minOtherColumn',
                        'sum',
                        'sumOtherColumn',
                        'allFields',
                        'columnFields',
                        'dataFields',
                        'filterFields',
                        'rowFields',
                        'columnFieldArea',
                        'dataFieldArea',
                        'filterFieldArea',
                        'rowFieldArea',
                        'collapseAll',
                        'dataNotAvailable',
                        'expandAll',
                        'exportToExcel',
                        'grandTotal',
                        'noData',
                        'removeAllSorting',
                        'showFieldChooser',
                        'sortColumnBySummary',
                        'sortRowBySummary',
                        'total',
                        'addRowToNode'
                    ] }]
        }], ctorParameters: function () { return [{ type: i1.NestedOptionHost, decorators: [{
                    type: SkipSelf
                }, {
                    type: Host
                }] }, { type: i1.NestedOptionHost, decorators: [{
                    type: Host
                }] }]; } });
export class DxoTextsModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DxoTextsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "16.2.12", ngImport: i0, type: DxoTextsModule, declarations: [DxoTextsComponent], exports: [DxoTextsComponent] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DxoTextsModule });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: DxoTextsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        DxoTextsComponent
                    ],
                    exports: [
                        DxoTextsComponent
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9kaXN0L3VpL25lc3RlZC90ZXh0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRztBQUVILG9DQUFvQztBQUVwQyxpREFBaUQ7QUFFakQsT0FBTyxFQUNILFNBQVMsRUFHVCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFFBQVEsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQU12QixPQUFPLEVBQ0gsZ0JBQWdCLEdBQ25CLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7OztBQXNFN0UsTUFBTSxPQUFPLGlCQUFrQixTQUFRLHlCQUF5QjtJQUU1RCxJQUFjLFdBQVc7UUFDckIsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUdELFlBQWdDLGdCQUFrQyxFQUNsRCxVQUE0QjtRQUN4QyxLQUFLLEVBQUUsQ0FBQztRQUNSLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFHRCxRQUFRO1FBQ0osSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELFdBQVc7UUFDUCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDbEQsQ0FBQzsySEFyQlEsaUJBQWlCOytHQUFqQixpQkFBaUIsNHVEQS9EZixDQUFDLGdCQUFnQixDQUFDLGlEQUZuQixFQUFFOzs0RkFpRUgsaUJBQWlCO2tCQW5FN0IsU0FBUzsrQkFDSSxXQUFXLFlBQ1gsRUFBRSxhQUVELENBQUMsZ0JBQWdCLENBQUMsVUFDckI7d0JBQ0osS0FBSzt3QkFDTCxjQUFjO3dCQUNkLGVBQWU7d0JBQ2YsT0FBTzt3QkFDUCxRQUFRO3dCQUNSLGtCQUFrQjt3QkFDbEIsa0JBQWtCO3dCQUNsQixzQkFBc0I7d0JBQ3RCLG9CQUFvQjt3QkFDcEIsV0FBVzt3QkFDWCxTQUFTO3dCQUNULGdCQUFnQjt3QkFDaEIsZ0JBQWdCO3dCQUNoQixhQUFhO3dCQUNiLHlCQUF5Qjt3QkFDekIsV0FBVzt3QkFDWCxvQkFBb0I7d0JBQ3BCLFVBQVU7d0JBQ1YsYUFBYTt3QkFDYixjQUFjO3dCQUNkLG1CQUFtQjt3QkFDbkIsbUJBQW1CO3dCQUNuQix1QkFBdUI7d0JBQ3ZCLHVCQUF1Qjt3QkFDdkIsU0FBUzt3QkFDVCxZQUFZO3dCQUNaLFFBQVE7d0JBQ1IsWUFBWTt3QkFDWixJQUFJO3dCQUNKLEtBQUs7d0JBQ0wsZ0JBQWdCO3dCQUNoQixPQUFPO3dCQUNQLEtBQUs7d0JBQ0wsZ0JBQWdCO3dCQUNoQixLQUFLO3dCQUNMLGdCQUFnQjt3QkFDaEIsS0FBSzt3QkFDTCxnQkFBZ0I7d0JBQ2hCLFdBQVc7d0JBQ1gsY0FBYzt3QkFDZCxZQUFZO3dCQUNaLGNBQWM7d0JBQ2QsV0FBVzt3QkFDWCxpQkFBaUI7d0JBQ2pCLGVBQWU7d0JBQ2YsaUJBQWlCO3dCQUNqQixjQUFjO3dCQUNkLGFBQWE7d0JBQ2Isa0JBQWtCO3dCQUNsQixXQUFXO3dCQUNYLGVBQWU7d0JBQ2YsWUFBWTt3QkFDWixRQUFRO3dCQUNSLGtCQUFrQjt3QkFDbEIsa0JBQWtCO3dCQUNsQixxQkFBcUI7d0JBQ3JCLGtCQUFrQjt3QkFDbEIsT0FBTzt3QkFDUCxjQUFjO3FCQUNqQjs7MEJBU1ksUUFBUTs7MEJBQUksSUFBSTs7MEJBQ3BCLElBQUk7O0FBMEJqQixNQUFNLE9BQU8sY0FBYzsySEFBZCxjQUFjOzRIQUFkLGNBQWMsaUJBbENkLGlCQUFpQixhQUFqQixpQkFBaUI7NEhBa0NqQixjQUFjOzs0RkFBZCxjQUFjO2tCQVIxQixRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixpQkFBaUI7cUJBQ2xCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxpQkFBaUI7cUJBQ2xCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBkZXZleHRyZW1lLWFuZ3VsYXJcbiAqIFZlcnNpb246IDI0LjEuM1xuICogQnVpbGQgZGF0ZTogVHVlIEp1biAxMSAyMDI0XG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEyIC0gMjAyNCBEZXZlbG9wZXIgRXhwcmVzcyBJbmMuIEFMTCBSSUdIVFMgUkVTRVJWRURcbiAqXG4gKiBUaGlzIHNvZnR3YXJlIG1heSBiZSBtb2RpZmllZCBhbmQgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIHRlcm1zXG4gKiBvZiB0aGUgTUlUIGxpY2Vuc2UuIFNlZSB0aGUgTElDRU5TRSBmaWxlIGluIHRoZSByb290IG9mIHRoZSBwcm9qZWN0IGZvciBkZXRhaWxzLlxuICpcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9EZXZFeHByZXNzL2RldmV4dHJlbWUtYW5ndWxhclxuICovXG5cbi8qIHRzbGludDpkaXNhYmxlOm1heC1saW5lLWxlbmd0aCAqL1xyXG5cclxuLyogdHNsaW50OmRpc2FibGU6dXNlLWlucHV0LXByb3BlcnR5LWRlY29yYXRvciAqL1xyXG5cclxuaW1wb3J0IHtcclxuICAgIENvbXBvbmVudCxcclxuICAgIE9uSW5pdCxcclxuICAgIE9uRGVzdHJveSxcclxuICAgIE5nTW9kdWxlLFxyXG4gICAgSG9zdCxcclxuICAgIFNraXBTZWxmXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5cclxuXHJcblxyXG5cclxuaW1wb3J0IHtcclxuICAgIE5lc3RlZE9wdGlvbkhvc3QsXHJcbn0gZnJvbSAnZGV2ZXh0cmVtZS1hbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEeG9HYW50dEhlYWRlckZpbHRlclRleHRzIH0gZnJvbSAnLi9iYXNlL2dhbnR0LWhlYWRlci1maWx0ZXItdGV4dHMnO1xyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdkeG8tdGV4dHMnLFxyXG4gICAgdGVtcGxhdGU6ICcnLFxyXG4gICAgc3R5bGVzOiBbJyddLFxyXG4gICAgcHJvdmlkZXJzOiBbTmVzdGVkT3B0aW9uSG9zdF0sXHJcbiAgICBpbnB1dHM6IFtcclxuICAgICAgICAnZml4JyxcclxuICAgICAgICAnbGVmdFBvc2l0aW9uJyxcclxuICAgICAgICAncmlnaHRQb3NpdGlvbicsXHJcbiAgICAgICAgJ3VuZml4JyxcclxuICAgICAgICAnYWRkUm93JyxcclxuICAgICAgICAnY2FuY2VsQWxsQ2hhbmdlcycsXHJcbiAgICAgICAgJ2NhbmNlbFJvd0NoYW5nZXMnLFxyXG4gICAgICAgICdjb25maXJtRGVsZXRlTWVzc2FnZScsXHJcbiAgICAgICAgJ2NvbmZpcm1EZWxldGVUaXRsZScsXHJcbiAgICAgICAgJ2RlbGV0ZVJvdycsXHJcbiAgICAgICAgJ2VkaXRSb3cnLFxyXG4gICAgICAgICdzYXZlQWxsQ2hhbmdlcycsXHJcbiAgICAgICAgJ3NhdmVSb3dDaGFuZ2VzJyxcclxuICAgICAgICAndW5kZWxldGVSb3cnLFxyXG4gICAgICAgICd2YWxpZGF0aW9uQ2FuY2VsQ2hhbmdlcycsXHJcbiAgICAgICAgJ2V4cG9ydEFsbCcsXHJcbiAgICAgICAgJ2V4cG9ydFNlbGVjdGVkUm93cycsXHJcbiAgICAgICAgJ2V4cG9ydFRvJyxcclxuICAgICAgICAnY2xlYXJGaWx0ZXInLFxyXG4gICAgICAgICdjcmVhdGVGaWx0ZXInLFxyXG4gICAgICAgICdmaWx0ZXJFbmFibGVkSGludCcsXHJcbiAgICAgICAgJ2dyb3VwQnlUaGlzQ29sdW1uJyxcclxuICAgICAgICAnZ3JvdXBDb250aW51ZWRNZXNzYWdlJyxcclxuICAgICAgICAnZ3JvdXBDb250aW51ZXNNZXNzYWdlJyxcclxuICAgICAgICAndW5ncm91cCcsXHJcbiAgICAgICAgJ3VuZ3JvdXBBbGwnLFxyXG4gICAgICAgICdjYW5jZWwnLFxyXG4gICAgICAgICdlbXB0eVZhbHVlJyxcclxuICAgICAgICAnb2snLFxyXG4gICAgICAgICdhdmcnLFxyXG4gICAgICAgICdhdmdPdGhlckNvbHVtbicsXHJcbiAgICAgICAgJ2NvdW50JyxcclxuICAgICAgICAnbWF4JyxcclxuICAgICAgICAnbWF4T3RoZXJDb2x1bW4nLFxyXG4gICAgICAgICdtaW4nLFxyXG4gICAgICAgICdtaW5PdGhlckNvbHVtbicsXHJcbiAgICAgICAgJ3N1bScsXHJcbiAgICAgICAgJ3N1bU90aGVyQ29sdW1uJyxcclxuICAgICAgICAnYWxsRmllbGRzJyxcclxuICAgICAgICAnY29sdW1uRmllbGRzJyxcclxuICAgICAgICAnZGF0YUZpZWxkcycsXHJcbiAgICAgICAgJ2ZpbHRlckZpZWxkcycsXHJcbiAgICAgICAgJ3Jvd0ZpZWxkcycsXHJcbiAgICAgICAgJ2NvbHVtbkZpZWxkQXJlYScsXHJcbiAgICAgICAgJ2RhdGFGaWVsZEFyZWEnLFxyXG4gICAgICAgICdmaWx0ZXJGaWVsZEFyZWEnLFxyXG4gICAgICAgICdyb3dGaWVsZEFyZWEnLFxyXG4gICAgICAgICdjb2xsYXBzZUFsbCcsXHJcbiAgICAgICAgJ2RhdGFOb3RBdmFpbGFibGUnLFxyXG4gICAgICAgICdleHBhbmRBbGwnLFxyXG4gICAgICAgICdleHBvcnRUb0V4Y2VsJyxcclxuICAgICAgICAnZ3JhbmRUb3RhbCcsXHJcbiAgICAgICAgJ25vRGF0YScsXHJcbiAgICAgICAgJ3JlbW92ZUFsbFNvcnRpbmcnLFxyXG4gICAgICAgICdzaG93RmllbGRDaG9vc2VyJyxcclxuICAgICAgICAnc29ydENvbHVtbkJ5U3VtbWFyeScsXHJcbiAgICAgICAgJ3NvcnRSb3dCeVN1bW1hcnknLFxyXG4gICAgICAgICd0b3RhbCcsXHJcbiAgICAgICAgJ2FkZFJvd1RvTm9kZSdcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIER4b1RleHRzQ29tcG9uZW50IGV4dGVuZHMgRHhvR2FudHRIZWFkZXJGaWx0ZXJUZXh0cyBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25Jbml0ICB7XHJcblxyXG4gICAgcHJvdGVjdGVkIGdldCBfb3B0aW9uUGF0aCgpIHtcclxuICAgICAgICByZXR1cm4gJ3RleHRzJztcclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3RydWN0b3IoQFNraXBTZWxmKCkgQEhvc3QoKSBwYXJlbnRPcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0LFxyXG4gICAgICAgICAgICBASG9zdCgpIG9wdGlvbkhvc3Q6IE5lc3RlZE9wdGlvbkhvc3QpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHBhcmVudE9wdGlvbkhvc3Quc2V0TmVzdGVkT3B0aW9uKHRoaXMpO1xyXG4gICAgICAgIG9wdGlvbkhvc3Quc2V0SG9zdCh0aGlzLCB0aGlzLl9mdWxsT3B0aW9uUGF0aC5iaW5kKHRoaXMpKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVjcmVhdGVkQ29tcG9uZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgdGhpcy5fYWRkUmVtb3ZlZE9wdGlvbih0aGlzLl9nZXRPcHRpb25QYXRoKCkpO1xyXG4gICAgfVxyXG5cclxuXHJcbn1cclxuXHJcbkBOZ01vZHVsZSh7XHJcbiAgZGVjbGFyYXRpb25zOiBbXHJcbiAgICBEeG9UZXh0c0NvbXBvbmVudFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgRHhvVGV4dHNDb21wb25lbnRcclxuICBdLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgRHhvVGV4dHNNb2R1bGUgeyB9XHJcbiJdfQ==