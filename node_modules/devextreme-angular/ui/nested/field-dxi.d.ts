import { NestedOptionHost } from 'devextreme-angular/core';
import { DxiFilterBuilderField } from './base/filter-builder-field-dxi';
import * as i0 from "@angular/core";
export declare class DxiFieldComponent extends DxiFilterBuilderField {
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiFieldComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiFieldComponent, "dxi-field", never, { "calculateFilterExpression": { "alias": "calculateFilterExpression"; "required": false; }; "caption": { "alias": "caption"; "required": false; }; "customizeText": { "alias": "customizeText"; "required": false; }; "dataField": { "alias": "dataField"; "required": false; }; "dataType": { "alias": "dataType"; "required": false; }; "editorOptions": { "alias": "editorOptions"; "required": false; }; "editorTemplate": { "alias": "editorTemplate"; "required": false; }; "falseText": { "alias": "falseText"; "required": false; }; "filterOperations": { "alias": "filterOperations"; "required": false; }; "format": { "alias": "format"; "required": false; }; "lookup": { "alias": "lookup"; "required": false; }; "name": { "alias": "name"; "required": false; }; "trueText": { "alias": "trueText"; "required": false; }; "allowCrossGroupCalculation": { "alias": "allowCrossGroupCalculation"; "required": false; }; "allowExpandAll": { "alias": "allowExpandAll"; "required": false; }; "allowFiltering": { "alias": "allowFiltering"; "required": false; }; "allowSorting": { "alias": "allowSorting"; "required": false; }; "allowSortingBySummary": { "alias": "allowSortingBySummary"; "required": false; }; "area": { "alias": "area"; "required": false; }; "areaIndex": { "alias": "areaIndex"; "required": false; }; "calculateCustomSummary": { "alias": "calculateCustomSummary"; "required": false; }; "calculateSummaryValue": { "alias": "calculateSummaryValue"; "required": false; }; "displayFolder": { "alias": "displayFolder"; "required": false; }; "expanded": { "alias": "expanded"; "required": false; }; "filterType": { "alias": "filterType"; "required": false; }; "filterValues": { "alias": "filterValues"; "required": false; }; "groupIndex": { "alias": "groupIndex"; "required": false; }; "groupInterval": { "alias": "groupInterval"; "required": false; }; "groupName": { "alias": "groupName"; "required": false; }; "headerFilter": { "alias": "headerFilter"; "required": false; }; "isMeasure": { "alias": "isMeasure"; "required": false; }; "precision": { "alias": "precision"; "required": false; }; "runningTotal": { "alias": "runningTotal"; "required": false; }; "selector": { "alias": "selector"; "required": false; }; "showGrandTotals": { "alias": "showGrandTotals"; "required": false; }; "showTotals": { "alias": "showTotals"; "required": false; }; "showValues": { "alias": "showValues"; "required": false; }; "sortBy": { "alias": "sortBy"; "required": false; }; "sortBySummaryField": { "alias": "sortBySummaryField"; "required": false; }; "sortBySummaryPath": { "alias": "sortBySummaryPath"; "required": false; }; "sortingMethod": { "alias": "sortingMethod"; "required": false; }; "sortOrder": { "alias": "sortOrder"; "required": false; }; "summaryDisplayMode": { "alias": "summaryDisplayMode"; "required": false; }; "summaryType": { "alias": "summaryType"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "width": { "alias": "width"; "required": false; }; "wordWrapEnabled": { "alias": "wordWrapEnabled"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxiFieldModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiFieldModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiFieldModule, [typeof DxiFieldComponent], never, [typeof DxiFieldComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiFieldModule>;
}
