/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { NestedOption } from 'devextreme-angular/core';
import { Orientation } from 'devextreme/common';
import { Store } from 'devextreme/data';
import DataSource, { Options as DataSourceOptions } from 'devextreme/data/data_source';
import { ContentReadyEvent, DisposingEvent, dxSplitterItem, InitializedEvent, ItemClickEvent, ItemCollapsedEvent, ItemContextMenuEvent, ItemExpandedEvent, ItemRenderedEvent, OptionChangedEvent, Properties as dxSplitterOptions, ResizeEndEvent, ResizeEvent, ResizeStartEvent } from 'devextreme/ui/splitter';
import * as i0 from "@angular/core";
export declare abstract class DxoSplitterOptions extends NestedOption {
    get allowKeyboardNavigation(): boolean;
    set allowKeyboardNavigation(value: boolean);
    get dataSource(): Store | DataSource | DataSourceOptions | null | string | Array<dxSplitterItem>;
    set dataSource(value: Store | DataSource | DataSourceOptions | null | string | Array<dxSplitterItem>);
    get disabled(): boolean;
    set disabled(value: boolean);
    get elementAttr(): any;
    set elementAttr(value: any);
    get height(): number | Function | string | undefined;
    set height(value: number | Function | string | undefined);
    get hoverStateEnabled(): boolean;
    set hoverStateEnabled(value: boolean);
    get items(): Array<any | {
        collapsed?: boolean;
        collapsedSize?: number | string | undefined;
        collapsible?: boolean;
        maxSize?: number | string | undefined;
        minSize?: number | string | undefined;
        resizable?: boolean;
        size?: number | string | undefined;
        splitter?: dxSplitterOptions | undefined;
        template?: any;
        text?: string;
        visible?: boolean;
    }>;
    set items(value: Array<any | {
        collapsed?: boolean;
        collapsedSize?: number | string | undefined;
        collapsible?: boolean;
        maxSize?: number | string | undefined;
        minSize?: number | string | undefined;
        resizable?: boolean;
        size?: number | string | undefined;
        splitter?: dxSplitterOptions | undefined;
        template?: any;
        text?: string;
        visible?: boolean;
    }>);
    get itemTemplate(): any;
    set itemTemplate(value: any);
    get onContentReady(): ((e: ContentReadyEvent) => void);
    set onContentReady(value: ((e: ContentReadyEvent) => void));
    get onDisposing(): ((e: DisposingEvent) => void);
    set onDisposing(value: ((e: DisposingEvent) => void));
    get onInitialized(): ((e: InitializedEvent) => void);
    set onInitialized(value: ((e: InitializedEvent) => void));
    get onItemClick(): ((e: ItemClickEvent) => void);
    set onItemClick(value: ((e: ItemClickEvent) => void));
    get onItemCollapsed(): ((e: ItemCollapsedEvent) => void);
    set onItemCollapsed(value: ((e: ItemCollapsedEvent) => void));
    get onItemContextMenu(): ((e: ItemContextMenuEvent) => void);
    set onItemContextMenu(value: ((e: ItemContextMenuEvent) => void));
    get onItemExpanded(): ((e: ItemExpandedEvent) => void);
    set onItemExpanded(value: ((e: ItemExpandedEvent) => void));
    get onItemRendered(): ((e: ItemRenderedEvent) => void);
    set onItemRendered(value: ((e: ItemRenderedEvent) => void));
    get onOptionChanged(): ((e: OptionChangedEvent) => void);
    set onOptionChanged(value: ((e: OptionChangedEvent) => void));
    get onResize(): ((e: ResizeEvent) => void);
    set onResize(value: ((e: ResizeEvent) => void));
    get onResizeEnd(): ((e: ResizeEndEvent) => void);
    set onResizeEnd(value: ((e: ResizeEndEvent) => void));
    get onResizeStart(): ((e: ResizeStartEvent) => void);
    set onResizeStart(value: ((e: ResizeStartEvent) => void));
    get orientation(): Orientation;
    set orientation(value: Orientation);
    get rtlEnabled(): boolean;
    set rtlEnabled(value: boolean);
    get separatorSize(): number;
    set separatorSize(value: number);
    get visible(): boolean;
    set visible(value: boolean);
    get width(): number | Function | string | undefined;
    set width(value: number | Function | string | undefined);
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoSplitterOptions, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoSplitterOptions, "ng-component", never, {}, {}, never, never, false, never>;
}
