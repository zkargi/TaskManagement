/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { ElementRef, Renderer2, AfterViewInit, QueryList } from '@angular/core';
import { NestedOptionHost, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { DxiButtonGroupItem } from './base/button-group-item-dxi';
import { DxiValidationRuleComponent } from './validation-rule-dxi';
import { DxiTabComponent } from './tab-dxi';
import { DxiLocationComponent } from './location-dxi';
import * as i0 from "@angular/core";
export declare class DxiItemComponent extends DxiButtonGroupItem implements AfterViewInit, IDxTemplateHost {
    private renderer;
    private document;
    private element;
    protected get _optionPath(): string;
    get itemsChildren(): QueryList<DxiItemComponent>;
    set itemsChildren(value: QueryList<DxiItemComponent>);
    get validationRulesChildren(): QueryList<DxiValidationRuleComponent>;
    set validationRulesChildren(value: QueryList<DxiValidationRuleComponent>);
    get tabsChildren(): QueryList<DxiTabComponent>;
    set tabsChildren(value: QueryList<DxiTabComponent>);
    get locationChildren(): QueryList<DxiLocationComponent>;
    set locationChildren(value: QueryList<DxiLocationComponent>);
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, renderer: Renderer2, document: any, templateHost: DxTemplateHost, element: ElementRef);
    setTemplate(template: DxTemplateDirective): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiItemComponent, [{ host: true; skipSelf: true; }, { host: true; }, null, null, { host: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiItemComponent, "dxi-item", never, { "disabled": { "alias": "disabled"; "required": false; }; "html": { "alias": "html"; "required": false; }; "icon": { "alias": "icon"; "required": false; }; "template": { "alias": "template"; "required": false; }; "text": { "alias": "text"; "required": false; }; "title": { "alias": "title"; "required": false; }; "titleTemplate": { "alias": "titleTemplate"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "onClick": { "alias": "onClick"; "required": false; }; "stylingMode": { "alias": "stylingMode"; "required": false; }; "type": { "alias": "type"; "required": false; }; "baseSize": { "alias": "baseSize"; "required": false; }; "box": { "alias": "box"; "required": false; }; "ratio": { "alias": "ratio"; "required": false; }; "shrink": { "alias": "shrink"; "required": false; }; "elementAttr": { "alias": "elementAttr"; "required": false; }; "hint": { "alias": "hint"; "required": false; }; "beginGroup": { "alias": "beginGroup"; "required": false; }; "closeMenuOnClick": { "alias": "closeMenuOnClick"; "required": false; }; "items": { "alias": "items"; "required": false; }; "selectable": { "alias": "selectable"; "required": false; }; "selected": { "alias": "selected"; "required": false; }; "colSpan": { "alias": "colSpan"; "required": false; }; "cssClass": { "alias": "cssClass"; "required": false; }; "dataField": { "alias": "dataField"; "required": false; }; "editorOptions": { "alias": "editorOptions"; "required": false; }; "editorType": { "alias": "editorType"; "required": false; }; "helpText": { "alias": "helpText"; "required": false; }; "isRequired": { "alias": "isRequired"; "required": false; }; "itemType": { "alias": "itemType"; "required": false; }; "label": { "alias": "label"; "required": false; }; "name": { "alias": "name"; "required": false; }; "validationRules": { "alias": "validationRules"; "required": false; }; "visibleIndex": { "alias": "visibleIndex"; "required": false; }; "alignItemLabels": { "alias": "alignItemLabels"; "required": false; }; "caption": { "alias": "caption"; "required": false; }; "captionTemplate": { "alias": "captionTemplate"; "required": false; }; "colCount": { "alias": "colCount"; "required": false; }; "colCountByScreen": { "alias": "colCountByScreen"; "required": false; }; "tabPanelOptions": { "alias": "tabPanelOptions"; "required": false; }; "tabs": { "alias": "tabs"; "required": false; }; "badge": { "alias": "badge"; "required": false; }; "tabTemplate": { "alias": "tabTemplate"; "required": false; }; "buttonOptions": { "alias": "buttonOptions"; "required": false; }; "horizontalAlignment": { "alias": "horizontalAlignment"; "required": false; }; "verticalAlignment": { "alias": "verticalAlignment"; "required": false; }; "locateInMenu": { "alias": "locateInMenu"; "required": false; }; "location": { "alias": "location"; "required": false; }; "menuItemTemplate": { "alias": "menuItemTemplate"; "required": false; }; "options": { "alias": "options"; "required": false; }; "showText": { "alias": "showText"; "required": false; }; "widget": { "alias": "widget"; "required": false; }; "height": { "alias": "height"; "required": false; }; "width": { "alias": "width"; "required": false; }; "imageAlt": { "alias": "imageAlt"; "required": false; }; "imageSrc": { "alias": "imageSrc"; "required": false; }; "acceptedValues": { "alias": "acceptedValues"; "required": false; }; "formatName": { "alias": "formatName"; "required": false; }; "formatValues": { "alias": "formatValues"; "required": false; }; "key": { "alias": "key"; "required": false; }; "showChevron": { "alias": "showChevron"; "required": false; }; "linkAttr": { "alias": "linkAttr"; "required": false; }; "url": { "alias": "url"; "required": false; }; "collapsed": { "alias": "collapsed"; "required": false; }; "collapsedSize": { "alias": "collapsedSize"; "required": false; }; "collapsible": { "alias": "collapsible"; "required": false; }; "maxSize": { "alias": "maxSize"; "required": false; }; "minSize": { "alias": "minSize"; "required": false; }; "resizable": { "alias": "resizable"; "required": false; }; "size": { "alias": "size"; "required": false; }; "splitter": { "alias": "splitter"; "required": false; }; "heightRatio": { "alias": "heightRatio"; "required": false; }; "widthRatio": { "alias": "widthRatio"; "required": false; }; "expanded": { "alias": "expanded"; "required": false; }; "hasItems": { "alias": "hasItems"; "required": false; }; "id": { "alias": "id"; "required": false; }; "parentId": { "alias": "parentId"; "required": false; }; }, {}, ["itemsChildren", "validationRulesChildren", "tabsChildren", "locationChildren"], ["*"], false, never>;
}
export declare class DxiItemModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiItemModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiItemModule, [typeof DxiItemComponent], never, [typeof DxiItemComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiItemModule>;
}
