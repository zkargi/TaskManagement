/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxoChartCommonSeriesSettings } from './base/chart-common-series-settings';
import * as i0 from "@angular/core";
export declare class DxoRangeareaComponent extends DxoChartCommonSeriesSettings implements OnDestroy, OnInit {
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoRangeareaComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoRangeareaComponent, "dxo-rangearea", never, { "aggregation": { "alias": "aggregation"; "required": false; }; "area": { "alias": "area"; "required": false; }; "argumentField": { "alias": "argumentField"; "required": false; }; "axis": { "alias": "axis"; "required": false; }; "bar": { "alias": "bar"; "required": false; }; "barOverlapGroup": { "alias": "barOverlapGroup"; "required": false; }; "barPadding": { "alias": "barPadding"; "required": false; }; "barWidth": { "alias": "barWidth"; "required": false; }; "border": { "alias": "border"; "required": false; }; "bubble": { "alias": "bubble"; "required": false; }; "candlestick": { "alias": "candlestick"; "required": false; }; "closeValueField": { "alias": "closeValueField"; "required": false; }; "color": { "alias": "color"; "required": false; }; "cornerRadius": { "alias": "cornerRadius"; "required": false; }; "dashStyle": { "alias": "dashStyle"; "required": false; }; "fullstackedarea": { "alias": "fullstackedarea"; "required": false; }; "fullstackedbar": { "alias": "fullstackedbar"; "required": false; }; "fullstackedline": { "alias": "fullstackedline"; "required": false; }; "fullstackedspline": { "alias": "fullstackedspline"; "required": false; }; "fullstackedsplinearea": { "alias": "fullstackedsplinearea"; "required": false; }; "highValueField": { "alias": "highValueField"; "required": false; }; "hoverMode": { "alias": "hoverMode"; "required": false; }; "hoverStyle": { "alias": "hoverStyle"; "required": false; }; "ignoreEmptyPoints": { "alias": "ignoreEmptyPoints"; "required": false; }; "innerColor": { "alias": "innerColor"; "required": false; }; "label": { "alias": "label"; "required": false; }; "line": { "alias": "line"; "required": false; }; "lowValueField": { "alias": "lowValueField"; "required": false; }; "maxLabelCount": { "alias": "maxLabelCount"; "required": false; }; "minBarSize": { "alias": "minBarSize"; "required": false; }; "opacity": { "alias": "opacity"; "required": false; }; "openValueField": { "alias": "openValueField"; "required": false; }; "pane": { "alias": "pane"; "required": false; }; "point": { "alias": "point"; "required": false; }; "rangearea": { "alias": "rangearea"; "required": false; }; "rangebar": { "alias": "rangebar"; "required": false; }; "rangeValue1Field": { "alias": "rangeValue1Field"; "required": false; }; "rangeValue2Field": { "alias": "rangeValue2Field"; "required": false; }; "reduction": { "alias": "reduction"; "required": false; }; "scatter": { "alias": "scatter"; "required": false; }; "selectionMode": { "alias": "selectionMode"; "required": false; }; "selectionStyle": { "alias": "selectionStyle"; "required": false; }; "showInLegend": { "alias": "showInLegend"; "required": false; }; "sizeField": { "alias": "sizeField"; "required": false; }; "spline": { "alias": "spline"; "required": false; }; "splinearea": { "alias": "splinearea"; "required": false; }; "stack": { "alias": "stack"; "required": false; }; "stackedarea": { "alias": "stackedarea"; "required": false; }; "stackedbar": { "alias": "stackedbar"; "required": false; }; "stackedline": { "alias": "stackedline"; "required": false; }; "stackedspline": { "alias": "stackedspline"; "required": false; }; "stackedsplinearea": { "alias": "stackedsplinearea"; "required": false; }; "steparea": { "alias": "steparea"; "required": false; }; "stepline": { "alias": "stepline"; "required": false; }; "stock": { "alias": "stock"; "required": false; }; "tagField": { "alias": "tagField"; "required": false; }; "type": { "alias": "type"; "required": false; }; "valueErrorBar": { "alias": "valueErrorBar"; "required": false; }; "valueField": { "alias": "valueField"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "width": { "alias": "width"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoRangeareaModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoRangeareaModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoRangeareaModule, [typeof DxoRangeareaComponent], never, [typeof DxoRangeareaComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoRangeareaModule>;
}
