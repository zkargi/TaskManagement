/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoPermissionsComponent extends NestedOption implements OnDestroy, OnInit {
    get copy(): boolean;
    set copy(value: boolean);
    get create(): boolean;
    set create(value: boolean);
    get delete(): boolean;
    set delete(value: boolean);
    get download(): boolean;
    set download(value: boolean);
    get move(): boolean;
    set move(value: boolean);
    get rename(): boolean;
    set rename(value: boolean);
    get upload(): boolean;
    set upload(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPermissionsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoPermissionsComponent, "dxo-permissions", never, { "copy": { "alias": "copy"; "required": false; }; "create": { "alias": "create"; "required": false; }; "delete": { "alias": "delete"; "required": false; }; "download": { "alias": "download"; "required": false; }; "move": { "alias": "move"; "required": false; }; "rename": { "alias": "rename"; "required": false; }; "upload": { "alias": "upload"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoPermissionsModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPermissionsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoPermissionsModule, [typeof DxoPermissionsComponent], never, [typeof DxoPermissionsComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoPermissionsModule>;
}
