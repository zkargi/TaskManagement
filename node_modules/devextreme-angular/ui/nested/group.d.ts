/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { Font, TextOverflow } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoGroupComponent extends NestedOption implements OnDestroy, OnInit {
    get border(): {
        color?: string;
        width?: number;
    };
    set border(value: {
        color?: string;
        width?: number;
    });
    get color(): string;
    set color(value: string);
    get headerHeight(): number | undefined;
    set headerHeight(value: number | undefined);
    get hoverEnabled(): boolean | undefined;
    set hoverEnabled(value: boolean | undefined);
    get hoverStyle(): {
        border?: {
            color?: string | undefined;
            width?: number | undefined;
        };
        color?: string | undefined;
    };
    set hoverStyle(value: {
        border?: {
            color?: string | undefined;
            width?: number | undefined;
        };
        color?: string | undefined;
    });
    get label(): {
        font?: Font;
        textOverflow?: TextOverflow;
        visible?: boolean;
    };
    set label(value: {
        font?: Font;
        textOverflow?: TextOverflow;
        visible?: boolean;
    });
    get padding(): number;
    set padding(value: number);
    get selectionStyle(): {
        border?: {
            color?: string;
            width?: number | undefined;
        };
        color?: string | undefined;
    };
    set selectionStyle(value: {
        border?: {
            color?: string;
            width?: number | undefined;
        };
        color?: string | undefined;
    });
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoGroupComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoGroupComponent, "dxo-group", never, { "border": { "alias": "border"; "required": false; }; "color": { "alias": "color"; "required": false; }; "headerHeight": { "alias": "headerHeight"; "required": false; }; "hoverEnabled": { "alias": "hoverEnabled"; "required": false; }; "hoverStyle": { "alias": "hoverStyle"; "required": false; }; "label": { "alias": "label"; "required": false; }; "padding": { "alias": "padding"; "required": false; }; "selectionStyle": { "alias": "selectionStyle"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoGroupModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoGroupModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoGroupModule, [typeof DxoGroupComponent], never, [typeof DxoGroupComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoGroupModule>;
}
