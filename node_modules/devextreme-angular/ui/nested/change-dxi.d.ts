import { NestedOptionHost } from 'devextreme-angular/core';
import { DxiDataChange } from './base/data-change-dxi';
import * as i0 from "@angular/core";
export declare class DxiChangeComponent extends DxiDataChange {
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiChangeComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiChangeComponent, "dxi-change", never, { "data": { "alias": "data"; "required": false; }; "insertAfterKey": { "alias": "insertAfterKey"; "required": false; }; "insertBeforeKey": { "alias": "insertBeforeKey"; "required": false; }; "key": { "alias": "key"; "required": false; }; "type": { "alias": "type"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxiChangeModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiChangeModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiChangeModule, [typeof DxiChangeComponent], never, [typeof DxiChangeComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiChangeModule>;
}
