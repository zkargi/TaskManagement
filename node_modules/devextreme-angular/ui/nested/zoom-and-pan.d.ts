/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { ChartZoomAndPanMode, EventKeyModifier } from 'devextreme/viz/chart';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoZoomAndPanComponent extends NestedOption implements OnDestroy, OnInit {
    get allowMouseWheel(): boolean;
    set allowMouseWheel(value: boolean);
    get allowTouchGestures(): boolean;
    set allowTouchGestures(value: boolean);
    get argumentAxis(): ChartZoomAndPanMode;
    set argumentAxis(value: ChartZoomAndPanMode);
    get dragBoxStyle(): {
        color?: string | undefined;
        opacity?: number | undefined;
    };
    set dragBoxStyle(value: {
        color?: string | undefined;
        opacity?: number | undefined;
    });
    get dragToZoom(): boolean;
    set dragToZoom(value: boolean);
    get panKey(): EventKeyModifier;
    set panKey(value: EventKeyModifier);
    get valueAxis(): ChartZoomAndPanMode;
    set valueAxis(value: ChartZoomAndPanMode);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoZoomAndPanComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoZoomAndPanComponent, "dxo-zoom-and-pan", never, { "allowMouseWheel": { "alias": "allowMouseWheel"; "required": false; }; "allowTouchGestures": { "alias": "allowTouchGestures"; "required": false; }; "argumentAxis": { "alias": "argumentAxis"; "required": false; }; "dragBoxStyle": { "alias": "dragBoxStyle"; "required": false; }; "dragToZoom": { "alias": "dragToZoom"; "required": false; }; "panKey": { "alias": "panKey"; "required": false; }; "valueAxis": { "alias": "valueAxis"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoZoomAndPanModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoZoomAndPanModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoZoomAndPanModule, [typeof DxoZoomAndPanComponent], never, [typeof DxoZoomAndPanComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoZoomAndPanModule>;
}
