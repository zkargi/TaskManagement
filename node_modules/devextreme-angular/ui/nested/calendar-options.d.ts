/*!
 * devextreme-angular
 * Version: 24.1.3
 * Build date: Tue Jun 11 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { CalendarZoomLevel } from 'devextreme/ui/calendar';
import { NestedOptionHost } from 'devextreme-angular/core';
import { DxoCalendarOptions } from './base/calendar-options';
import * as i0 from "@angular/core";
export declare class DxoCalendarOptionsComponent extends DxoCalendarOptions implements OnDestroy, OnInit {
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    valueChange: EventEmitter<Date | number | string | Array<Date | number | string>>;
    /**
    
     * This member supports the internal infrastructure and is not intended to be used directly from your code.
    
     */
    zoomLevelChange: EventEmitter<CalendarZoomLevel>;
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCalendarOptionsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoCalendarOptionsComponent, "dxo-calendar-options", never, { "accessKey": { "alias": "accessKey"; "required": false; }; "activeStateEnabled": { "alias": "activeStateEnabled"; "required": false; }; "cellTemplate": { "alias": "cellTemplate"; "required": false; }; "dateSerializationFormat": { "alias": "dateSerializationFormat"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "disabledDates": { "alias": "disabledDates"; "required": false; }; "elementAttr": { "alias": "elementAttr"; "required": false; }; "firstDayOfWeek": { "alias": "firstDayOfWeek"; "required": false; }; "focusStateEnabled": { "alias": "focusStateEnabled"; "required": false; }; "height": { "alias": "height"; "required": false; }; "hint": { "alias": "hint"; "required": false; }; "hoverStateEnabled": { "alias": "hoverStateEnabled"; "required": false; }; "isDirty": { "alias": "isDirty"; "required": false; }; "isValid": { "alias": "isValid"; "required": false; }; "max": { "alias": "max"; "required": false; }; "maxZoomLevel": { "alias": "maxZoomLevel"; "required": false; }; "min": { "alias": "min"; "required": false; }; "minZoomLevel": { "alias": "minZoomLevel"; "required": false; }; "name": { "alias": "name"; "required": false; }; "onDisposing": { "alias": "onDisposing"; "required": false; }; "onInitialized": { "alias": "onInitialized"; "required": false; }; "onOptionChanged": { "alias": "onOptionChanged"; "required": false; }; "onValueChanged": { "alias": "onValueChanged"; "required": false; }; "readOnly": { "alias": "readOnly"; "required": false; }; "rtlEnabled": { "alias": "rtlEnabled"; "required": false; }; "selectionMode": { "alias": "selectionMode"; "required": false; }; "selectWeekOnClick": { "alias": "selectWeekOnClick"; "required": false; }; "showTodayButton": { "alias": "showTodayButton"; "required": false; }; "showWeekNumbers": { "alias": "showWeekNumbers"; "required": false; }; "tabIndex": { "alias": "tabIndex"; "required": false; }; "validationError": { "alias": "validationError"; "required": false; }; "validationErrors": { "alias": "validationErrors"; "required": false; }; "validationMessageMode": { "alias": "validationMessageMode"; "required": false; }; "validationMessagePosition": { "alias": "validationMessagePosition"; "required": false; }; "validationStatus": { "alias": "validationStatus"; "required": false; }; "value": { "alias": "value"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; "weekNumberRule": { "alias": "weekNumberRule"; "required": false; }; "width": { "alias": "width"; "required": false; }; "zoomLevel": { "alias": "zoomLevel"; "required": false; }; }, { "valueChange": "valueChange"; "zoomLevelChange": "zoomLevelChange"; }, never, never, false, never>;
}
export declare class DxoCalendarOptionsModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCalendarOptionsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoCalendarOptionsModule, [typeof DxoCalendarOptionsComponent], never, [typeof DxoCalendarOptionsComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoCalendarOptionsModule>;
}
